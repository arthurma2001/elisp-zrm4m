(defun ama-seq-column-sort (alst ncol)
  (sort alst #'(lambda (x y) (> (nth ncol x) (nth ncol y))))
  )

(defun ama-strncmp (str1 str2 n)
  (let ((i 0) (ok t)
        (n1 (length str1))
        (n2 (length str2)))
    (when (and (>= n1 n) (>= n2 n))
      (while (and ok (< i n))
        (if (eq (aref str1 i) (aref str2 i))
            (setq i (1+ i))
          (setq ok nil)))
      ;;(print (message "i = %d" i))
      (eq i n))))
;;(ama-strncmp "abc" "ab" 3)

(defun ama-seq-test0 ()
  (setq tmp_alst (list (list 'a 0 1)
                       (list 'b 0 12)
                       (list 'c 0 -5)))
  (setq tmp_blst (copy-list tmp_alst))
  (ama-seq-column-sort tmp_blst 2)
  )
(ama-seq-test0)

